---
title: "Survey Variables as R Vectors"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Survey Data as R Vectors

This document contains all survey variables converted to named R vectors for easy analysis.

### Demographics

```{r demographics}
# Age variables
age_data <- c(
  mean_age = 22.2,
  sd_age = 6.29,
  min_age = 16,
  max_age = 69
)

# Class breakdown
class_data <- c(
  senior = 344,
  junior = 264,
  sophomore = 244,
  freshman = 216,
  masters = 78,
  doctoral = 25,
  post_bacc = 12
)

# Ethnicity breakdown
ethnicity_data <- c(
  wn_hisp = 569,
  hisp = 400,
  black = 75,
  unknown = 53,
  multiracial = 39,
  asian = 29,
  intrnl = 14,
  am_ind = 4
)

# Gender breakdown
gender_data <- c(
  female_n = 798,
  male_n = 385
)

# Housing breakdown
housing_data <- c(
  bv = 20,
  Off = 909,
  On = 254
)

# Student status
status_data <- c(
  full_time = 1038,
  part_time = 145
)

# Veteran status
veteran_data <- c(
  vet = 1038,
  vet_dep = 66,
  na = 1038
)

# Worker status
worker_data <- c(
  GA = 991,
  UGA = 12,
  Stu_wage = 129,
  na = 991
)
```

### Transportation

```{r transportation}
# Drive data
drive_data <- c(
  yes = 1120,
  no = 51,
  na = 12
)

# License data
license_data <- c(
  yes = 39,
  no = 12,
  na = 1132
)

# Parking on campus frequency
park_campus_data <- c(
  "0_days" = 83,
  "1_day" = 94,
  "2_days" = 143,
  "3_days" = 126,
  "4_days" = 148,
  "5_days" = 127,
  "6_days" = 22,
  "7_days" = 152,
  na = 288
)

# Park campus days numeric
park_campus_days_data <- c(
  "0" = 83,
  "1" = 94,
  "2" = 143,
  "3" = 126,
  "4" = 148,
  "5" = 127,
  "6" = 22,
  "7" = 152,
  na = 288
)

# Travel time (in minutes)
travel_time_data <- c(
  "0" = 360,
  "15" = 190,
  "30" = 107,
  "45" = 56,
  "60" = 52,
  na = 418
)

# Travel distance (in miles)
travel_distance_data <- c(
  "0" = 373,
  "5" = 117,
  "10" = 77,
  "20" = 90,
  "30" = 87,
  na = 426
)

# Main route to campus
main_route_data <- c(
  "Aquarena_Springs" = 210,
  "Hopkins" = 54,
  "Hunter" = 11,
  "N_Guadalupe_St" = 39,
  "N_LBJ_Dr_at_Sessom_Dr" = 44,
  "N_LBJ_Dr_at_Woods_St" = 14,
  "Old_Ranch_Road_12" = 37,
  "Other" = 29,
  "Sessom_Dr" = 57,
  "Thorpe_Lane" = 14,
  "Wonder_World" = 26,
  na = 648
)

# Region data
region_data <- c(
  "Region_1" = 3,
  "Region_10" = 2,
  "Region_11" = 3,
  "Region_2" = 5,
  "Region_3" = 23,
  "Region_4" = 12,
  "Region_5" = 18,
  "Region_6" = 105,
  "Region_7" = 19,
  "Region_8" = 11,
  "Other" = 40,
  na = 938
)
```

### Parking Permits

```{r parking_permits}
# Parking permit status
park_permit_data <- c(
  Yes = 563,
  No = 264,
  na = 356
)

# Permit type
permit_type_data <- c(
  Gold = 22,
  Green = 143,
  na = 1183
)

# Gold vs Green reasons
goldvgreen_data <- c(
  "Green_Residential_Permits_were_sold_out" = 5,
  "Price" = 13,
  "Other" = 4,
  na = 1161
)

# Green vs Gold reasons
greenvgold_data <- c(
  "Bobcat_Shuttle_no_bus" = 8,
  "Convenience_immediate_access" = 104,
  "Did_not_know_Gold_Mill_Street_option" = 8,
  "Vehicle_Safety_concerns" = 8,
  "Other" = 14,
  na = 1041
)

# Permit type 2
permit_type_2_data <- c(
  Gold = 22,
  Green = 143,
  na = 1018
)

# Reasons for no permit
no_permit_data <- c(
  "Available_parking_inconvenient" = 36,
  "Did_not_want_Bobcat_Shuttle" = 8,
  "No_available_parking_belief" = 40,
  "Other" = 9,
  "Permit_cost_too_high" = 76,
  "Purchase_temporary_permits" = 1,
  "Rarely_never_drive_to_campus" = 9,
  na = 1004
)

# Where do you park
park_where_data <- c(
  "Closest_to_class" = 178,
  "Easiest_lot" = 37,
  "Most_likely_available_spaces" = 114,
  "No_Bobcat_Shuttle_required" = 22,
  "Other" = 27,
  na = 805
)
```

### Resident Parking

```{r resident_parking}
# Drive to class from residence
drive_res_class_data <- c(
  No = 109,
  Yes = 33,
  na = 1041
)

# How often drive from residence to class
drive_res_class_days_data <- c(
  "2_3_times_a_week" = 14,
  "4_6_times_a_week" = 6,
  "Daily" = 8,
  "Once_a_week" = 5,
  na = 1150
)

# Resident parking location
res_park_data <- c(
  "Academy_Street_Garage_Lot_304" = 12,
  "Blanco_Garage_Lot_303" = 36,
  "College_Inn_Lot_202" = 8,
  "Pay_to_Park_garage" = 5,
  "Jackson_Lot_204" = 1,
  "Llano_Drive_Lot_301" = 1,
  "Matthews_Garage_Lot_113" = 13,
  "Other_Green_Residential_Parking" = 18,
  "San_Jacinto_Hall_Lot_112" = 12,
  "Speck_Garage_Lot_306" = 14,
  "Tower_Garage_Lot_106" = 13,
  "Woods_Garage_Lot_108" = 9,
  na = 1041
)

# Resident parking location 2
res_park2_data <- c(
  "Academy_Street_Garage_Lot_304" = 1,
  "Admissions_Lot_105" = 1,
  "Pay_to_Park_garage" = 1,
  "Matthews_Garage_Lot_113" = 5,
  "Other_Green_Residential_Parking" = 5,
  "San_Jacinto_Hall_Lot_112" = 2,
  "Tower_Garage_Lot_106" = 5,
  "Woods_Garage_Lot_108" = 12,
  na = 1151
)

# Mills campus peak
mills_campus_peak_data <- c(
  No = 20,
  Yes = 2,
  na = 1161
)

# BV campus peak
bv_campus_peak_data <- c(
  No = 3,
  Yes = 9,
  na = 1171
)
```

## Combine All Vectors into a List

```{r combine_data}
# Create a list containing all the vectors
survey_data <- list(
  age = age_data,
  class = class_data,
  ethnicity = ethnicity_data,
  gender = gender_data,
  housing = housing_data,
  status = status_data,
  veteran = veteran_data,
  worker = worker_data,
  drive = drive_data,
  license = license_data,
  park_campus = park_campus_data,
  park_campus_days = park_campus_days_data,
  travel_time = travel_time_data,
  travel_distance = travel_distance_data,
  main_route = main_route_data,
  region = region_data,
  park_permit = park_permit_data,
  permit_type = permit_type_data,
  goldvgreen = goldvgreen_data,
  greenvgold = greenvgold_data,
  permit_type_2 = permit_type_2_data,
  no_permit = no_permit_data,
  park_where = park_where_data,
  drive_res_class = drive_res_class_data,
  drive_res_class_days = drive_res_class_days_data,
  res_park = res_park_data,
  res_park2 = res_park2_data,
  mills_campus_peak = mills_campus_peak_data,
  bv_campus_peak = bv_campus_peak_data
)

# Print the names of all variables in the dataset
names(survey_data)

# Example of how to access a specific variable
survey_data$class

# Example of calculating percentages
class_percentages <- round(survey_data$class / sum(survey_data$class) * 100, 1)
class_percentages
```

## Create a Summary Function

```{r summary_function}
# Create a function to summarize any variable
summarize_variable <- function(variable_name) {
  data <- survey_data[[variable_name]]
  total <- sum(data[names(data) != "na"])
  
  result <- data.frame(
    Level = names(data),
    Count = as.numeric(data),
    Percentage = ifelse(names(data) == "na", NA, 
                        round(data / total * 100, 1))
  )
  
  # Remove NA rows if requested
  result <- result[order(-result$Count), ]
  
  return(result)
}

# Example usage
summarize_variable("class")
summarize_variable("ethnicity")
```

## Export to CSV

```{r export_to_csv, eval=FALSE}
# Create a list to hold all summary data frames
all_summaries <- list()

# Generate summary for each variable
for (var_name in names(survey_data)) {
  all_summaries[[var_name]] <- summarize_variable(var_name)
}

# Export each summary to a separate CSV file
for (var_name in names(all_summaries)) {
  write.csv(all_summaries[[var_name]], 
            file = paste0("survey_summary_", var_name, ".csv"),
            row.names = FALSE)
}

# Create a single data frame with all variables and their levels
all_variables_df <- data.frame(
  Variable = character(),
  Level = character(),
  Count = numeric(),
  Percentage = numeric()
)

for (var_name in names(all_summaries)) {
  df <- all_summaries[[var_name]]
  df$Variable <- var_name
  all_variables_df <- rbind(all_variables_df, df[, c("Variable", "Level", "Count", "Percentage")])
}

# Export the combined data frame
write.csv(all_variables_df, "all_survey_variables.csv", row.names = FALSE)
```
